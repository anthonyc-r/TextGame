/** Scripting plans **/

Entity.
Creature.
Ground.

!!Stack based.

Array management:
select n

State management:
set_state s //End current turn

Flow control:
if s... : perform the next instruction if top of stack == s

Randomness:
random n - uniform random between 0 and n

Memory management:
remember
recall

Entity:

Creature:
listen 
say s? - adds string or stack to speech buffer
use(Entity) - must be in range
take(Entity)
drop(Entity) - drops below self
look_creature() -> [Creature] array of strings
look_entity() -> [Entity]
move_toward(Creature|Entity) -> "no_path, not_found, ok, arrived"
melee(Creature|Entity)

Ground:
{name, rel_location}
look_around() -> [Entity], [Creature]
look_at(rel_location) -> ""


Example script:
-state main
look_creature
select 0
remember
if player
set_state prep_attack

-state prep_attack
say "I'll kill you "
say
say "!"
set_state attack

-state attack 
listen
if ".*key of elementals.*"
set_state quest_start
move_toward
if no_path not_found
set_state main
recall
melee

-state quest_0
say "You know of the key..."
set_state

-state quest_1
listen
if "next quest trigger..."
set_state quest_2
etc...
